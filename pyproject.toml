[tool.poetry]
include = ["MANIFEST.skao.int"]
name = "ska-mid-dish-steering-control"
version = "0.5.1"
description = "Python module that interfaces with the OPCUA protocol of the dish structure controller"
authors = [
    "Oliver Skivington <oliver.skivington@criticalsoftware.com>",
    "Thomas Juerges <thomas.juerges@skao.int>",
    "Ulrik Pedersen <ukp@observatorysciences.co.uk>",
    "Jarrett Engelbrecht <jarrett@vivosa.co.za>",
]
license = "BSD-3-Clause"
readme = "README.md"
repository = "https://gitlab.com/ska-telescope/ska-mid-dish-steering-control"
documentation = "https://developer.skao.int/projects/ska-mid-dish-steering-control"

[[tool.poetry.source]]
name = "ska-nexus"
url = "https://artefact.skao.int/repository/pypi-all/simple"

[tool.poetry.dependencies]
python = "^3.10"
asyncua = "^1.1.5"
pyyaml = "^6.0.0"
platformdirs = "^4.2.2"
jsonschema = "^4.23.0"
jsonschema-specifications = "^2024.10.1"
referencing = "^0.35.1"
attrs = "^24.2.0"
cffi = "^1.17.1"
packaging = "^24.2"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
pylint = "^3.3.1"
pylint-junit = "^0.3.4"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-forked = "^1.4.0"
pytest-json-report = "^1.4.1"
flake8-docstrings = "^1.7.0"
flake8-rst-docstrings = "^0.3.0"
flake8-pyproject = "^1.2.3"
mypy = "^1.9.0"

[tool.poetry.group.docs.dependencies]
Sphinx = "^6.2.1"
docutils = "< 0.20"
sphinx-tabs = "*"
typing_extensions = "*"
sphinx-copybutton = "*"
ska-ser-sphinx-theme = "^0.1.2"
sphinx-autodoc-typehints = "^1.23.0"
sphinxcontrib-plantuml = "^0.30"

[tool.mypy]
ignore_missing_imports = true        # Ignore missing stubs in imported modules
strict_optional = false              # TODO: Remove, see https://mypy.readthedocs.io/en/stable/config_file.html#none-and-optional-handling
disallow_incomplete_defs = true
disable_error_code = "call-overload"

[tool.isort]
profile = "black"

[tool.black] # See https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-format
line-length = 88

[tool.pytest.ini_options]
addopts = "-v --tb=native"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"
